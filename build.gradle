buildscript {
    ext {
        kotlinVersion = '1.2.0'
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'

ext {
    targetJvmVersion = '1.8'
}

sourceCompatibility = targetJvmVersion
targetCompatibility = targetJvmVersion
compileKotlin {
    kotlinOptions.jvmTarget = targetJvmVersion
}
compileTestKotlin {
    kotlinOptions.jvmTarget = targetJvmVersion
}

processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.h2database:h2'
    compile 'org.flywaydb:flyway-core'
    compile 'org.seasar.doma.boot:doma-spring-boot-starter:1.1.1'
    compile('org.springframework.boot:spring-boot-starter')
    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
    manifest {
        attributes('Main-Class': 'entrance.Main')
    }
}
