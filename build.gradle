buildscript {
    ext {
        kotlinVersion = '1.2.71'
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "com.google.gradle:osdetector-gradle-plugin:1.6.0"
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: "com.google.osdetector"

if (osdetector.os == "osx") {
    ext.platform = "mac"
} else if (osdetector.os == "windows") {
    ext.platform = "win"
} else {
    ext.platform = osdetector.os
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-spring'
    apply plugin: 'io.spring.dependency-management'

    ext {
        targetJvmVersion = 11
    }

    sourceCompatibility = targetJvmVersion
    targetCompatibility = targetJvmVersion
    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    processResources.destinationDir = compileJava.destinationDir
    compileJava.dependsOn processResources

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation("org.jetbrains.kotlin:kotlin-stdlib")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
        implementation("org.jetbrains.kotlin:kotlin-reflect")
        testImplementation('org.springframework.boot:spring-boot-starter-test')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
        }
    }
}

project(":domain") {
    dependencies {
        api "org.springframework:spring-context"
        api "org.slf4j:slf4j-api"
    }
}

project(":application") {
    dependencies {
        api project(':domain')
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    }
}

project(":infrastructure") {
    dependencies {
        api 'com.h2database:h2'
        implementation 'org.flywaydb:flyway-core'
        implementation('org.seasar.doma.boot:doma-spring-boot-starter:1.1.1') {
            exclude group: 'org.seasar.doma', module: 'doma'
        }
        implementation 'org.seasar.doma:doma:2.19.2'
        api project(':application')
        
        implementation group: 'commons-io', name: 'commons-io', version: '2.5'
        implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
        implementation group: 'com.sangupta', name: 'jopensurf', version: '1.0.0'
    }
}

project(":view") {
    dependencies {
        api project(':application')
        implementation "org.openjfx:javafx-base:11:$platform"
        api "org.openjfx:javafx-graphics:11:$platform"
        implementation "org.openjfx:javafx-controls:11:$platform"
        implementation "org.openjfx:javafx-fxml:11:$platform"
        implementation "org.openjfx:javafx-media:11:$platform"
    }
}

project(":main") {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation project(':view')
        implementation project(':infrastructure')
    }
}